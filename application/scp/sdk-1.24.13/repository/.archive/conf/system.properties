# Set the configuration factory implementation. This is where we plug-in our deployer for resource auto-configuration
openejb.configurator=com.sap.cloud.runtime.kotee.deployer.EnhancedConfigurationFactory
org.apache.openejb.assembler.classic.OpenEjbConfigurationFactory=com.sap.cloud.runtime.kotee.deployer.EnhancedConfigurationFactory

# Disable our deployer for the specified modules. This should speed up the server start-up and save some resources
com.sap.cloud.runtime.kotee.deployer.disable_for_modules=config;oauth2.local;n;saml2#localidp;saml2#sp

#Disable JPA for CDI. It's a chicke-egg problem - CDI wants JPA to init and JPA wands CDI to init.
tomee.jpa.cdi=false

# Choose JNDI deployment format for EJB. See http://tomee.apache.org/jndi-names.html
openejb.deploymentId.format={appId}/{ejbJarId}/{ejbName}
openejb.jndiname.format={deploymentId}{interfaceType.annotationName}

# default list of packages/classnames excluded for EJBd deserialization (needs to be set on server and client sides).
tomee.serialization.class.blacklist=*

# List of prefixes you want to exclude and are not in the default list of exclusion. Speeds up the start-up
openejb.additional.exclude=com.sap.core.js.logging.jar,\
	jul-to-slf4j.jar,\
	logback-classic.jar,\
	logback-core.jar,\
	jvmx.jar,\
	chemistry-,\
	sysout-over-slf4j.jar,ngdbc.jar,\
	com.sap.cloud.account.jar,\
	com.sap.cloud.crypto.keystore.api.jar,\
	com.sap.cloud.crypto.lib.api.jar,\
	com.sap.cloud.runtime.impl.bridge.jar,\
	com.sap.cloud.runtime.impl.bridge.security.jar,\
	com.sap.cloud.runtime.impl.bridge.tenant.jar,\
	com.sap.cloud.runtime.kotee.deployer-,\
	com.sap.cloud.runtime.kotyo.configurator.jar,\
	com.sap.cloud.runtime.kotyo.mail.client.config.local.jar,\
	com.sap.cloud.runtime.kotyo.persistence.client.jar,\
	com.sap.cloud.runtime.kotyo.tomcat.support.jar,\
	com.sap.cloud.security.oauth2.api.jar,\
	com.sap.cloud.security.password.api.jar,\
	com.sap.cloud.tomcat.session.management.jar,\
	com.sap.conn.jco.cloud.jar,com.sap.core.connectivity.apiext.jar,\
	com.sap.core.jpaas.security.auth.api.jar,\
	com.sap.core.jpaas.security.auth.lib.jar,\
	com.sap.core.jpaas.security.lib.sso2.jar,\
	com.sap.core.jpaas.security.saml2.cfg.jar,\
	com.sap.core.jpaas.security.saml2.commons.jar,\
	com.sap.core.jpaas.security.saml2.lib.jar,\
	com.sap.core.jpaas.security.um.api.jar,\
	com.sap.core.jpaas.security.utils.jar,\
	com.sap.core.js.catalina.fragment.jar,\
	com.sap.core.js.monitoring.jar,\
	com.sap.core.js.monitoring.tomcat.valve.jar,\
	com.sap.core.log.providers.jar,\
	com.sap.core.service.auditlog.api.jar,\
	com.sap.core.service.auditlog.extension.api.jar,\
	com.sap.core.services.accessor.jar,\
	com.sap.core.services.accessor.lifecycle.jar,\
	com.sap.core.tenant.common.jar,\
	com.sap.core.tenant.valve.jar,\
	com.sap.dbtech.jar,\
	com.sap.ecm.api.cmis.spi.jar,\
	com.sap.ecm.api.impl.local.jar,\
	com.sap.ecm.api.jar,\
	com.sap.jpaas.service.auditlog.jar,\
	com.sap.jpaas.service.securestore.password.jar,\
	com.sap.js.ach.manager.jar,\
	com.sap.js.passport.api.jar,com.sap.js.statistics.api.jar,\
	com.sap.js.statistics.impl.jar,\
	com.sap.js.statistics.tomcat.valve.jar,\
	com.sap.js.tc.logging.jar,com.sap.xml.signature.jar,\
	jcl-over-slf4j.jar,\
	jconn4.jar,\
	com.sap.cloud.runtime.kotyo.mail.client.jar,\
	commonj.sdo-,json-simple.jar,\
	validation-api-1.1.0.Final.jar

# Not a configuration option - it must always be enforced to "TRUE" - required for BVal to work in TomEE
# Once it was missing from the configuration factory, so make sure it's always set. 
bval.in-container=true

# These properties make the OpenEJB naming context read-only, and make it behave as required by the TCK
openejb.forceReadOnlyAppNamingContext=true
openejb.jndiExceptionOnFailedWrite=false

# This property enables configuring deployment on startup (at the creation of the EntityManagerFactory) 
# instead of occurring the first time an EntityManager is created.
eclipselink.deploy-on-startup=true
